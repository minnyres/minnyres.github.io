[{"content":"Jellyfin是一款开源的媒体管理软件，可以对本地硬盘上的电影、音乐、电子书等资源进行扫描识别整理，建立相应的媒体库。本文主要介绍使用Jellyfin管理电影资源的方法。按照本文的操作步骤，你将可以通过局域网或者互联网访问Jellyfin的Web界面，浏览电影海报，查看电影和演职员信息，并且在线播放视频。虽然Jellyfin可以直接识别硬盘上的视频文件，但是为了方便管理、提升识别正确率、避免影响做种，还是建议使用Radarr为视频文件建立电影目录和硬链接供Jellyfin管理，而不是直接让Jellyfin管理原始视频文件。\n安装Jellyfin 这里介绍在Linux系统下的安装方法。首先安装ffmpeg。Arch Linux和Manjaro的安装命令为\nsudo pacman -S ffmpeg 使用wget下载Jellyfin。对于X64系统，\nwget https://repo.jellyfin.org/releases/server/linux/stable/combined/jellyfin_10.8.3_amd64.tar.gz 对于ARM64系统，\nwget https://repo.jellyfin.org/releases/server/linux/stable/combined/jellyfin_10.8.3_arm64.tar.gz 解压并复制到路径/opt下\ntar -xf jellyfin_10.8.3*.tar.gz sudo mv jellyfin_10.8.3 /opt 为了方便升级，在/opt目录下为Jellyfin建立一个符号连接\nsudo ln -s jellyfin_10.8.3 /opt/jellyfin 建立一个目录，用在存放Jellyfin的配置、数据、缓存以及日志等\nmkdir jellyfin 创建一个脚本，用来启动Jellyfin\nJELLYFINDIR=$(pwd)/jellyfin cat \u0026lt;\u0026lt; EOF | sudo tee /opt/jellyfin/jellyfin.sh \u0026gt; /dev/null #!/bin/bash /opt/jellyfin/jellyfin -d $JELLYFINDIR/data -C $JELLYFINDIR/cache -c $JELLYFINDIR/config -l $JELLYFINDIR/log --ffmpeg /usr/bin/ffmpeg EOF sudo chmod 755 /opt/jellyfin/jellyfin.sh 为Jellyfin添加systemd的service\ncat \u0026lt;\u0026lt; EOF | sudo tee /etc/systemd/system/jellyfin.service \u0026gt; /dev/null [Unit] Description=Jellyfin After=network.target [Service] Type=simple User=$USER Restart=always ExecStart=/opt/jellyfin/jellyfin.sh [Install] WantedBy=multi-user.target EOF 现在就可以通过systemd启动Jellyfin\nsudo systemctl -q daemon-reload sudo systemctl enable --now -q jellyfin Jellyfin的初始设置 Jellyfin服务器可以通过网页访问。在浏览器中，输入地址http://\u0026lt;IP\u0026gt;:8096，可以看到Jellyfin的初始设置向导，其中\u0026lt;IP\u0026gt;需要替换为Linux服务器的IP地址。首先，如图所示，把首选显示语言设为中文。设置好后，点击“下一个”按钮，并按照提示设置用户名和密码。接下来提示添加媒体库，我们先不添加，点击“下一个”按钮跳过。在设置元数据语言这一栏，把语言设为中文，国家设置为中国。在设置远程访问这里，点击“下一个”使用默认选项。最后会提示你设置完成，确认后可以进入Jellyfin的登录页。输入刚才设置的用户名和密码登录。\n在Jellyfin中添加媒体库 登录后，Jellyfin的主页显示会显示一句话“这里没有可显示的内容”。那么我们就点击链接“您想现在创建一个吗？”创建我们的媒体库。点击之后，会出现下方右图所示的页面，然后再点击“添加媒体库”。\n在添加媒体库的选项中，内容类型需要选择“电影”，显示名称可以根据自己的喜好设置，这里设置为“电影”。文件夹是存储视频文件的目录，这里设置为我们之前用Radarr生成硬链接的根目录。其余的选项可以参考下方图片。设置好后，点击确定即可。\n添加完成后，Jellyfin会自动识别设定文件夹下的电影信息，并且联网下载电影、影人的元数据以及图片等。如果视频文件较多，这可能需要一段时间。和Radarr一样，Jellyfin需要从TMDB获取电影信息。TMDB虽然没有被墙，但是在国内受到了DNS污染，推荐使用DNSCrypt-Proxy解决DNS污染问题，这样就可以正常使用Jellyfin。Jellyfin处理完成之后，进入“电影”媒体库，就可以看到已经添加的电影的海报。点击海报进入电影详情页，可以查看电影的详细信息并播放电影。\n最后，除了通过网页访问Jellyfin，我们实际上也可以通过Jellyfin的本地客户端来访问Jellyfin。如果想要得到更好的视频播放体验，一定要用客户端而不是网页播放，因为浏览器支持的视频格式有限，使用浏览器播放经常需要在服务器上进行转码，可能占用较多资源并导致播放卡顿。\n","date":"2022-08-06T09:17:14+08:00","image":"https://minnyres.github.io/p/jellyfin/banner-logo-solid_huaf13dcd282d077f3cc8c9833e6cc5af1_107445_120x120_fill_box_smart1_3.png","permalink":"https://minnyres.github.io/p/jellyfin/","title":"使用Jellyfin建立自己的影视库"},{"content":"在上一篇文章中，我们介绍了Radarr的基本使用方法。在Radarr中，我们需要在添加BT站点之后，才能搜索下载影视资源。虽然Radarr直接支持的BT站点比较少，但借助Jackett，我们可以在Radarr中连接几乎所有的BT站点。本文面向Linux系统，首先介绍Jackett的安装，然后具体说明在Jackett中添加BT站点的方法，最后再介绍让Radarr使用Jackett中的BT站点的方法。\n安装Jackett 通过wget命令下载Jackett。对于X64系统，\nwget https://github.com/Jackett/Jackett/releases/download/v0.20.1563/Jackett.Binaries.LinuxAMDx64.tar.gz 对于ARM64系统，\nwget https://github.com/Jackett/Jackett/releases/download/v0.20.1563/Jackett.Binaries.LinuxARM64.tar.gz 解压并复制到路径/opt下\ntar -xf Jackett*.Linux*.tar.gz sudo mv Jackett /opt 让Jackett作为系统服务运行\ncd /opt/Jackett/ sudo ./install_service_systemd.sh Jackett的使用 在浏览器中，输入地址http://\u0026lt;IP\u0026gt;:9117进入Jackett的WEB界面，其中\u0026lt;IP\u0026gt;需要替换为Linux服务器的IP地址。在\u0026quot;Jackett Configuration\u0026quot;下面可以进行一些简单的设置，第一次使用建议设置一下管理密码。如下图所示，输入密码后，点击按钮\u0026quot;Set password\u0026quot;保存即可。如果网络连接不太好的话，也可以设置代理。\n下面我们开始在Jackett中添加BT站点。点击页面上方的按钮\u0026quot;Add indexer\u0026quot;，在弹出的对话框中会出现支持的BT站点的列表。如图所处，我们以TLFBits为例，输入名称进行搜索。搜索完成后，点击蓝色的Configure按钮进行相应的账户配置。\n下面左图是添加TLFBits时出现的配置页，我们填入账号、密码以及验证码后，点击\u0026quot;Okay\u0026quot;，就可以成功添加TLFBits。类似地，我们可以添加更多站点，例如FRDS。下面右图是添加FRDS时的配置页。你会发现，不同站点的配置选项可能是不一样的。添加FRDS只需要填入cookie，页面上对获取cookie的步骤进行了详细的说明，我们只需照做即可。\n配合Radarr添加站点 把站点添加到Jackett以后，就可以在Radarr中连接这些站点了。下图是Jackett的已添加站点列表，在站点名称那一行点击按钮\u0026quot;Copy Torznab Feed\u0026quot;按钮复制连接。然后，在Radarr的页面下，点开设置-\u0026gt;索引器，再点击页面左上方的“+”号并选择Torznab。在Torznab的设置中，我们需要填入站点名称，URL以及API Key，其中URL是刚才在Jackett中复制的链接，而API Key在Jackett页面的右上角可以看到。如下图所示，我们在Radarr中添加了TLFBits，注意在“Category”一栏里最好把和电影有关的都选上。点击保存按钮后，你就已经大功告成了，之后就可以在Radarr中搜索并下载TLFBits的电影资源了。\n","date":"2022-08-03T20:57:14+08:00","image":"https://minnyres.github.io/p/jackett/jackett_hu5190d301db09ca29df16d6bad907db19_8333_120x120_fill_box_smart1_3.png","permalink":"https://minnyres.github.io/p/jackett/","title":"使用Jackett让Radarr添加更多BT站点"},{"content":"Radarr是一个针对Usenet和BT用户的电影资源管理工具，配合特定的下载工具和Jellyfin、Emby等媒体中心可以实现全自动观影。本文在Linux上安装并配置Radarr，实现同时从多个BT站搜索电影，调用qBittorrent进行下载，并在下载完成后自动创建硬链接供Jellyfin识别等功能。\n安装Radarr 首先需要安装curl和sqlite。Debian系统可以通过包管理器安装\nsudo apt install curl sqlite3 Arch Linux和Manjaro的安装命令为\nsudo pacman -S curl sqlite3 使用wget下载Radarr。对于X64系统，\nwget --content-disposition 'http://radarr.servarr.com/v1/update/master/updatefile?os=linux\u0026amp;runtime=netcore\u0026amp;arch=x64' 对于ARM64系统，\nwget --content-disposition 'http://radarr.servarr.com/v1/update/master/updatefile?os=linux\u0026amp;runtime=netcore\u0026amp;arch=arm64' 解压安装到/opt目录下\ntar -xvzf Radarr*.linux*.tar.gz sudo mv Radarr /opt 添加systemd的service\ncat \u0026lt;\u0026lt; EOF | sudo tee /etc/systemd/system/radarr.service \u0026gt; /dev/null [Unit] Description=Radarr Daemon After=syslog.target network.target [Service] User=$USER Type=simple ExecStart=/opt/Radarr/Radarr -nobrowser TimeoutStopSec=20 KillMode=process Restart=on-failure [Install] WantedBy=multi-user.target EOF 现在就可以通过systemd启动Radarr了\nsudo systemctl -q daemon-reload sudo systemctl enable --now -q radarr 对Radarr进行设置 在浏览器中，输入地址http://\u0026lt;IP\u0026gt;:7878，其中\u0026lt;IP\u0026gt;需要替换为Linux服务器的IP地址。打开网页后，我们可以看到Radarr的Web UI，并进行相应的管理和设置。\n设置界面 点开Settings-\u0026gt;UI设置Radarr的显示界面。默认的语言是英文，这里我们把语言设置为中文，并且对时间和日期的显示格式进行一些调整，以适应中文用户的习惯。设置好后，点击左上方的“Save Changes”保存设置，然后刷新页面，你会发现Radarr的界面已经变成了中文显示。\n添加索引器 对于BT用户来说，添加索引器就是要添加BT站点，这样Radarr才能够去搜索影视资源。点开设置-\u0026gt;索引器，然后点击页面左上方的“+”号，就会弹出添加索引器的窗口。\n可以看到，Torrents下面列出了一些常见的BT站点。当然，我们可以添加的BT站点远不止这些。借助Jackett这一工具，我们可以添加现存的大多数BT站点。为了简单，这里先不介绍Jackett的使用，只添加列出的一些BT站点。我们首先尝试添加Rarbg。点击Rarbg，会出现下图的对话框，在“Category”一栏选上除了\u0026quot;Xxx\u0026quot;的所有资源分类以获得更多搜索结果，然后直接点击保存。完成之后，Rarbg就会显示在索引器列表中。\n再点击“+”号可以继续添加BT站点，这里我们选择添加FileList.io。由于FileList是Private Tracker (PT)站点，我们需要注册一个账号，并填入自己的用户名和Passkey。同样地，在“Category”一栏选上除了\u0026quot;Xxx\u0026quot;的所有资源分类。\n添加下载客户端 下面我们添加下载客户端。Radarr从BT站搜索到影视资源后，会调用我们添加的BT客户端进行下载。点开设置-\u0026gt;下载客户端，还是点击页面左上方的“+”号，在弹出的页面中可以选择客户端的类型。因为我用的是qBittorrent，所以这里选择qBittorrent。在弹出的qBittorrent设置对话框中，设置好qBittorrent的IP地址、端口、用户名和密码，点击保存即可。注意在qBittorrent设置中，最下方有一个“移除已完成”的选项不建议勾选。\n媒体管理 然后对媒体管理进行设置。点开设置-\u0026gt;媒体管理，首先按照下面左图进行设置。其中，点击“添加根目录”可以添加相应目录。在Radarr中，根目录就是存放视频文件的路径，可以有多个。这里我们添加了两个，一个存放电影，一个存放纪录片。\n还需要勾选上选项“重命名影片”。Radarr在下载完成后，为了方便整理，会在选定的根目录下为视频文件创建硬链接。勾选“重命名影片”后，Radarr会按照我们设置的命名规则对硬链接进行重命名，这样有助于媒体中心识别。对影片重命名的格式定义在选项“标准影片格式”中。不同的媒体中心，例如Jellyfin和Plex，它们推荐的命名方式是不同的，这里我们使用Jellyfin推荐的电影命名方式。为了进行设置，点击左上方“显示高级设置”，在标准影片格式中填入\n1 {Movie Title} ({Release Year}) - [{Release Group} {Edition Tags} {Quality Title}] 然后在影片文件夹格式中填入\n1 {Movie Title} ({Release Year}) [imdbid-{ImdbId}] 如下面右图所示。设置完成后需要保存更改。\n影片质量配置 点开设置-\u0026gt;配置，可以对影片质量进行配置。可以发现，Radarr已经预设了几种不同的影片质量配置，包括Any、HD/720P、SD等，如下方左图所示。注意在默认设置下，影片的语言是英语，这会导致我们只能搜索到英语电影。因此，我们需要点击\u0026quot;Any\u0026quot;图标，并在弹出的对话框中，把语言从\u0026quot;English\u0026quot;修改为\u0026quot;Any\u0026quot;，如下方右图所示。修改完成后，点击保存。类似地，我们可以对HD/720P、SD等质量配置的语言进行设置。\n设置密码（可选） 如果你希望提升Radarr服务器的安全性，可以设置访问密码。点开设置-\u0026gt;通用，在“安全”下面，按照下图进行设置，填入你的访问用户名和密码，最后点击左上角的“保存更改”。\nRadarr的使用 完成Radarr的设置后，我们再对Radarr的使用方法进行介绍。Radarr的功能很多，这里只介绍最基本的使用。\n添加电影 为了通过Radarr完成自动化下载，我们首先需要把电影添加到Radarr的媒体库。点击电影-\u0026gt;添加电影，输入电影名称进行搜索，稍等几秒后界面上就会展示搜索结果，如下方左图所示。然而，大多数人都会遇到搜索失败的情况。这是因为，Radarr需要连接TMDB的数据库进行搜索，然而TMDB的DNS在国内被污染了。因此，为了能够使用Radarr，我们需要解决DNS污染问题。如果有条件的话可以在设置-\u0026gt;通用里添加代理。\n在搜索结果中，选中你想看的电影后，弹出的对话框中会提供一些选项，如下方右图所示。其中，根目录是创建硬链接的位置，影片质量配置是用来设置电影画质的，默认是\u0026quot;Any\u0026quot;。选项“开始搜索缺失影片”建议不选，否则Radarr会自动搜索电影资源并开始下载。最后，点击右下方的“添加电影”完成添加。\n下载电影 在“电影”这一栏，可以看到我们添加的电影。点击电影海报，在出现的界面中，点击搜索，Radarr就会从我们添加的索引器中搜索电影资源。搜索结果中会显示视频的大小、质量以及做种人数等信息，如下方右图所示。选择一个合适的资源，点击资源名称左边的下载按钮，Radarr就会自动调用BT客户端进行下载。\n下载完成后，电影的状态会变成“已下载”，同时Radarr会自动在根目录下创建硬链接，如下图所示。如果你已经把根目录添加到Jellyfin等媒体中心的监控目录，那么媒体中心就会自动识别电影并将其添加到媒体库中。\n","date":"2022-07-10T20:39:14+08:00","image":"https://minnyres.github.io/p/radarr/moviedetails_hu6c75ae5c919a75e2f574f642a22d08af_270964_120x120_fill_box_smart1_3.png","permalink":"https://minnyres.github.io/p/radarr/","title":"通过Radarr实现全自动观影"},{"content":"Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://docs.stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2022-03-06T00:00:00Z","image":"https://minnyres.github.io/p/hello-world/cover_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"https://minnyres.github.io/p/hello-world/","title":"Hello World"}]